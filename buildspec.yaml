version: 0.2

env:
  shell: bash
  variables:
    SYNOPSYS_IO_Workflow_Engine_Version : '2022.4.1'
    SYNOPSYS_IO_io_server_token: ${{secret.IO_ACCESS_TOKEN}}
    SYNOPSYS_IO_project_name: 'aws-io-sample'
    SYNOPSYS_IO_io_server_url: 'https://io10.codedx.synopsys.com'
    SYNOPSYS_IO_persona_type: devsecops
    SYNOPSYS_IO_polaris_instanceurl: 'https://sipse.polaris.synopsys.com'
    SYNOPSYS_IO_polaris_authtoken: ${{secret.POLARIS_TOKEN}}
    SYNOPSYS_IO_polaris_projectName: 'aws-insecure-bank'
    SYNOPSYS_IO_sigma_downloadurl: <sigma_download_url>
    SYNOPSYS_IO_Jira_HostUrl: <jira_host_url>
    SYNOPSYS_IO_Jira_Username: <jira_user_name>
    SYNOPSYS_IO_Jira_AuthToken: ${{secrets.JIRA_AUTH_TOKEN}}
    SYNOPSYS_IO_Jira_IssueType: <jira_issue_type>
    SYNOPSYS_IO_Jira_Project_Key: <jira_project_key>
    SYNOPSYS_IO_Jira_Assignee: <jira_assignee>
    SYNOPSYS_IO_slack_channelIdentifier: ${{secrets.SLACK_ID}}
    SYNOPSYS_IO_slack_bearerToken: ${{secrets.SLACK_TOKEN}}
    SYNOPSYS_IO_jira_issuesquery: <jira_issues_query>
    SYNOPSYS_IO_jira_project_name: <jira_projet_name>
    SYNOPSYS_IO_scm_type: github
    SYNOPSYS_IO_scm_owner: ozviper
    SYNOPSYS_IO_scm_repository_name: 'insecure-bank'
    SYNOPSYS_IO_scm_repository_branch_name: aws
    SYNOPSYS_IO_github_token: ${{secrets.GITHUB_ACCESS}}
    SYNOPSYS_IO_github_username: ozviper
    SYNOPSYS_IO_github_apiUrl: 'https://api.github.com/repos'
    SYNOPSYS_IO_project_release_type: <project_release_type>
    SYNOPSYS_IO_Blackduck_AuthToken: ${{secret.BLACKDUCK_TOKEN}}
    SYNOPSYS_IO_Blackduck_ProjectName: 'aws-insecure-bank'
    SYNOPSYS_IO_Blackduck_InstanceUrl: 'https://testing.blackduck.synopsys.com'
    SYNOPSYS_IO_Blackduck_ProjectVersion: aws
    SYNOPSYS_IO_Coverity_InstanceUrl: <coverity_instance_url>
    SYNOPSYS_IO_Coverity_Username: ${{secrets.COVERITY_USERNAME}}
    SYNOPSYS_IO_Coverity_Password: ${{secrets.COVERITY_PASSWORD}}
    SYNOPSYS_IO_Coverity_Stream: <coverity_stream>
    SYNOPSYS_IO_Coverity_FilePath: <coverity_filepath>

    Runner_OS_Type: linux64
    ioClientVersion: "0.1.629"

phases:
  install:
    commands:
      - echo ================Getting IO =======================
      - echo ==== Synopsys Intelligent Security Scan ==========
      - echo ================ stage io ========================
      - |
        if [ ! -d "io_client-$ioClientVersion-$Runner_OS_Type" ]; then
          wget -O io_client-$ioClientVersion-$Runner_OS_Type.zip "$IO_SERVER_URL/api/ioiq/api/downloads/io-client?extension=zip&platform=$Runner_OS_Type"
          unzip io_client-$ioClientVersion-$Runner_OS_Type.zip
        fi
  
  pre_build:
    commands:
      - echo ======= IO Prescription Stage =============
      - |
        io_client-$ioClientVersion-$Runner_OS_Type/io --stage io
        - Is_SAST_Enabled=$(jq -r '.Data.Prescription.Security.Activities.Sast.Enabled' io_state.json)
        - Is_SASTPlusM_Enabled=$(jq -r '.Data.Prescription.Security.Activities.SastPlusM.Enabled' io_state.json)
        - Is_SCA_Enabled=$(jq -r '.Data.Prescription.Security.Activities.Sca.Enabled' io_state.json)
        - Is_DAST_Enabled=$(jq -r '.Data.Prescription.Security.Activities.Dast.Enabled' io_state.json)
        - Is_DASTPlusM_Enabled=$(jq -r '.Data.Prescription.Security.Activities.DastPlusM.Enabled' io_state.json)
        - Is_IMAGESCAN_Enabled=$(jq -r '.Data.Prescription.Security.Activities.ImageScan.Enabled' io_state.json)
        - BIZ_CRIT_SCORE=$(jq -r '.Data.Prescription.RiskScore.BusinessCriticalityScore' io_state.json)
        - DATA_CLASS_SCORE=$(jq -r '.Data.Prescription.RiskScore.DataClassScore' io_state.json)
        - ACCESS_SCORE=$(jq -r '.Data.Prescription.RiskScore.AccessScore' io_state.json)
        - OPEN_VULN_SCORE=$(jq -r '.Data.Prescription.RiskScore.OpenVulnerabilityScore' io_state.json)
        - CHANGE_SIG_SCORE=$(jq -r '.Data.Prescription.RiskScore.ChangeSignificanceScore' io_state.json)

        echo "================================== IO Prescription ======================================="
        echo "Is SAST Enabled - $Is_SAST_Enabled"
        echo "Is SCA Enabled - $Is_SCA_Enabled"
        echo "Is DAST Enabled - ${Is_DAST_Enabled}"
        echo "Is Image Scan Enabled - ${Is_IMAGESCAN_Enabled}"
        echo "Is Source Code Review - Manual (SAST+M) Enabled - ${Is_SASTPlusM_Enabled}"
        echo "Is Penetration Testing - Manual (DAST+M) Enabled - ${Is_DASTPlusM_Enabled}"
        if [ $SYNOPSYS_IO_persona_type == "devsecops" ]; then
            echo "==================================== IO Risk Score ======================================="
            echo "Business Criticality Score - ${BIZ_CRIT_SCORE}"
            echo "Data Class Score - ${DATA_CLASS_SCORE}"
            echo "Access Score - ${ACCESS_SCORE}"
            echo "Open Vulnerability Score - ${OPEN_VULN_SCORE}"
            echo "Change Significance Score - ${CHANGE_SIG_SCORE}"
            export bizScore=$(echo $BIZ_CRIT_SCORE | cut -d'/' -f2)
            export dataScore=$(echo $DATA_CLASS_SCORE | cut -d'/' -f2)
            export accessScore=$(echo $ACCESS_SCORE | cut -d'/' -f2)
            export vulnScore=$(echo $OPEN_VULN_SCORE | cut -d'/' -f2)
            export changeScore=$(echo $CHANGE_SIG_SCORE | cut -d'/' -f2)
            echo -n "Total Score - " && echo "$bizScore + $dataScore + $accessScore + $vulnScore + $changeScore" | bc
        fi
  build:
    commands:
      - echo ================Build Maven Package and Docker Image================
